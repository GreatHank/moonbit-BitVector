package "GreatHank/BitVector"

// Values
fn and(BitVector, BitVector) -> BitVector

fn clear(BitVector) -> Unit

fn combine(BitVector, BitVector) -> BitVector

fn find_first_set(BitVector) -> Int

fn find_first_unset(BitVector) -> Int

fn flip(BitVector, Int) -> Unit

fn not(BitVector) -> BitVector

fn op_get(BitVector, Int) -> Bool

fn op_set(BitVector, Int, Bool) -> Unit

fn op_shl(BitVector, Int) -> BitVector

fn op_shr(BitVector, Int) -> BitVector

fn or(BitVector, BitVector) -> BitVector

fn push(BitVector, Bool) -> Unit

fn reset_all(BitVector) -> Unit

fn set_all(BitVector) -> Unit

fn set_number_count(BitVector) -> Int

fn slice(BitVector, Int, Int) -> BitVector

fn unset_number_count(BitVector) -> Int

fn xor(BitVector, BitVector) -> BitVector

// Types and methods
type BitVector
impl BitVector {
  and(Self, Self) -> Self
  bool_to_bitvector(Array[Bool]) -> Self
  clear(Self) -> Unit
  combine(Self, Self) -> Self
  copy(Self) -> Self
  deserialization(Bytes) -> Self
  find_first_set(Self) -> Int
  find_first_unset(Self) -> Int
  flip(Self, Int) -> Unit
  iter(Self) -> Iter[Bool]
  length(Self) -> Int
  new(Int) -> Self
  not(Self) -> Self
  op_get(Self, Int) -> Bool
  op_set(Self, Int, Bool) -> Unit
  op_shl(Self, Int) -> Self
  op_shr(Self, Int) -> Self
  or(Self, Self) -> Self
  push(Self, Bool) -> Unit
  reset_all(Self) -> Unit
  serialization_back(Self) -> Bytes
  serialization_front(Self) -> Bytes
  set_all(Self) -> Unit
  set_number_count(Self) -> Int
  slice(Self, Int, Int) -> Self
  to_bool(Self) -> Array[Bool]
  unset_number_count(Self) -> Int
  xor(Self, Self) -> Self
}
impl Show for BitVector

// Type aliases

// Traits

